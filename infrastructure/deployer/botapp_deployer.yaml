AWSTemplateFormatVersion: '2010-09-09'
Description: Stack template to create a CodeBuild project capable of deploying a chatbot architecture fully autonomously. 

# === (1) Parameters === #
Parameters:
  ProjectId:
    Type: String
    Description: A short identifier for this project (used in naming resources)
    AllowedPattern: "^[a-z0-9]{1,8}$"
    ConstraintDescription: "The parameter must be 3 to 8 alphanumeric characters in lower case."

Resources:
  # === (2) Bucket to hold artifacts === #
  BotAppDeployerBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ProjectId}-deployer-${AWS::AccountId}-${AWS::Region}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # === (3) IAM Role for CodeBuild project === #
  BotAppDeployerCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectId}-${AWS::AccountId}-deployer-codebuild-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub "${ProjectId}-${AWS::AccountId}-codebuild-permissions"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              # CloudFormation access
              - Sid: CloudFormationPermissions
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStackResource
                Resource: "*"
              
              # S3 access
              - Sid: S3Permissions
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub "arn:aws:s3:::${ProjectId}-*"
                  - !Sub "arn:aws:s3:::${ProjectId}-*/*"
              
              # Lambda access 
              - Sid: LambdaPermissions
                Effect: Allow
                Action:
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                  - lambda:PublishVersion
                  - lambda:CreateAlias
                  - lambda:UpdateAlias
                  - lambda:GetFunction
                  - lambda:InvokeFunction
                Resource: 
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ProjectId}-*"
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ProjectId}-*:alias/*"

              # AutoScaling access to configure concurrency
              - Sid: AutoScalingLambdaConcurrency
                Effect: Allow
                Action:
                  - application-autoscaling:RegisterScalableTarget
                  - application-autoscaling:DeregisterScalableTarget
                  - application-autoscaling:PutScheduledAction
                Resource: "*"

              # Secrets Manager access
              - Sid: SecretsManagerAccess
                Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${ProjectId}-${AWS::AccountId}-GitLabDeployToken*"

              # CloudWatch access
              - Sid: Logging
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  # === (4) Secret to store the Gitlab deploy token === # 
  BotAppGitLabDeployTokenSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "${ProjectId}-${AWS::AccountId}-GitLabDeployToken"
      Description: "GitLab deploy token for CodeBuild access"
      SecretString: '{"username": "PLACEHOLDER", "token":"PLACEHOLDER"}'  # replace manually after creation

  # === (5) CodeBuild Project === # 
  BotAppDeployerCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectId}-${AWS::AccountId}-botapp-deployer"
      Description: "CodeBuild project to deploy chatbot architecture"
      ServiceRole: !GetAtt BotAppDeployerCodeBuildRole.Arn
      Artifacts:
        Type: S3
        Location: !Ref BotAppDeployerBucket
        Packaging: ZIP
        Name: !Sub "${ProjectId}-botapp-deployer-artifacts.zip" ########################
        Path: "artifacts" #################
        NamespaceType: BUILD_ID
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:7.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: GITLAB_TOKEN_SECRET_ARN
            Value: !Ref BotAppGitLabDeployTokenSecret
          - Name: GIT_BRANCH
            Value: "main"
          - Name: PROJECT_ID
            Value: !Ref ProjectId
          - Name: ACCOUNT_ID
            Value: !Ref "AWS::AccountId"
          - Name: AWS_REGION
            Value: !Ref "AWS::Region"
          - Name: DEPLOY_BUCKET
            Value: !Sub "${ProjectId}-deployer-${AWS::AccountId}-${AWS::Region}"
      Source:
        Type: S3
        Location: !Sub "${BotAppDeployerBucket}/buildspec.zip" ######################
      # BuildSpec: "buildspec.yaml" ##################
      TimeoutInMinutes: 60
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub "/aws/codebuild/${ProjectId}-${AWS::AccountId}-botapp-deployer"
          StreamName: "build-logs"

Outputs:
  # deployer bucket name
  DeployerBucketName:
    Description: Name of the S3 bucket for deployment artifacts
    Value: !Ref BotAppDeployerBucket
  # deployer bucket URL
  DeployBucketUrl:
    Description: URL to the deployment S3 bucket
    Value: !Sub "https://s3.console.aws.amazon.com/s3/buckets/${DEPLOY_BUCKET}?region=${AWS::Region}"

  # secret name
  GitlabTokenSecretName:
    Description: Name of the AWS Secret storing the Gitlab token credentials
    Value: !Sub "${ProjectId}-${AWS::AccountId}-GitLabDeployToken"
  # secret URL
  GitlabTokenSecretUrl:
    Description: URL to the GitLab token secret in AWS Console
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/secretsmanager/secret?name=${ProjectId}-${AWS::AccountId}-GitLabDeployToken&region=${AWS::Region}"
  
  # codebuild project name
  CodeBuildProjectName:
    Description: Name of the CodeBuild project
    Value: !Ref BotAppDeployerBucket
  # codebuild project URL
  CodeBuildProjectUrl:
    Description: URL to the CodeBuild project in AWS Console
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/codesuite/codebuild/${ProjectId}-${AWS::AccountId}-botapp-deployer/projects?region=${AWS::Region}"